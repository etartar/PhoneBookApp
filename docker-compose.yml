version: '3.9'

services:
  phonebookapp.rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq-management
    restart: always
    volumes:
        - ./.containers/queue/data/:/var/lib/rabbitmq
        - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports: 
      - "5672:5672"
      - "15672:15672"

  phonebookapp.contactdb:
    image: postgres:latest
    container_name: contactdb
    restart: always
    ports: 
      - 5442:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Pasword12*
      - POSTGRES_DB=contactdb
    volumes:
      - postgres_contact_data:/var/lib/postgresql/data
      
  phonebookapp.reportdb:
    image: postgres:latest
    container_name: reportdb
    restart: always
    ports: 
      - 5452:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Pasword12*
      - POSTGRES_DB=reportdb
    volumes:
      - postgres_report_data:/var/lib/postgresql/data

  phonebookapp.contact.api:
    image: ${DOCKER_REGISTRY-}phonebookappservicescontactapi
    container_name: Contact.Api
    build:
      context: .
      dockerfile: src/Services/Contact/PhoneBookApp.Services.Contact.Api/Dockerfile
    environment: 
     - "ConnectionStrings::Database=User Id=postgres; Password=Password12*; Server=phonebookapp.contactdb; Port=5442; Database=contactdb; Integrated Security=true; Pooling=true"
     - "ConnectionStrings::Queue=amqp://phonebookapp.rabbitmq:5672"
    ports:
      - 5000:8080
      - 5001:8081
    depends_on:
      - "phonebookapp.contactdb"

  phonebookapp.report.api:
    image: ${DOCKER_REGISTRY-}phonebookappservicesreportapi
    container_name: Report.Api
    build:
      context: .
      dockerfile: src/Services/Report/PhoneBookApp.Services.Report.Api/Dockerfile
    environment: 
     - "ConnectionStrings::Database=User Id=postgres; Password=Password12*; Server=phonebookapp.reportdb; Port=5452; Database=reportdb; Integrated Security=true; Pooling=true"
     - "ConnectionStrings::Queue=amqp://phonebookapp.rabbitmq:5672"
    ports:
      - 5100:8080
      - 5101:8081
    depends_on:
      - phonebookapp.reportdb

volumes:
  postgres_contact_data:
  postgres_report_data: